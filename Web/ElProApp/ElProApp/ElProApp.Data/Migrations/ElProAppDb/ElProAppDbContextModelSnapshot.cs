// <auto-generated />
using System;
using ElProApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElProApp.Data.Migrations.ElProAppDb
{
    [DbContext(typeof(ElProAppDbContext))]
    partial class ElProAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElProApp.Data.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("MoneyToTake")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<decimal>("Wages")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ElProApp.Data.Models.EmployeeTeamMapping", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId", "EmployeeTeamId");

                    b.HasIndex("EmployeeTeamId");

                    b.ToTable("EmployeeTeamMappings");
                });

            modelBuilder.Entity("ElProApp.Data.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ElProApp.Data.Models.EmployeeTeamMapping", b =>
                {
                    b.HasOne("ElProApp.Data.Models.Employee", "Employee")
                        .WithMany("EmployeeTeamsMapping")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElProApp.Data.Models.Team", "Team")
                        .WithMany("EmployeesMapping")
                        .HasForeignKey("EmployeeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ElProApp.Data.Models.Employee", b =>
                {
                    b.Navigation("EmployeeTeamsMapping");
                });

            modelBuilder.Entity("ElProApp.Data.Models.Team", b =>
                {
                    b.Navigation("EmployeesMapping");
                });
#pragma warning restore 612, 618
        }
    }
}
